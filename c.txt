c
#vim hello.c
#gcc hello.c -o hello.out
#./hello.out

c++
#vim hii.cpp
#g++ hii.cpp -o hii.out
#./hii.out


***********
check if a number is Positive or Negative
#include <stdio.h>

int main() {
    int num;
    
    printf("Enter a number: ");
    scanf("%d", &num);
    
    if (num > 0)
        printf("%d is a Positive number.\n", num);
    else if (num < 0)
        printf("%d is a Negative number.\n", num);
    else
        printf("The number is Zero.\n");
    
    return 0;
}

**********************
Factorial of a number 
#include <stdio.h>

int main() {
    int num, i;
    unsigned long long factorial = 1;
    
    printf("Enter a number: ");
    scanf("%d", &num);
    
    if (num < 0)
        printf("Factorial of a negative number doesn't exist.\n");
    else {
        for (i = 1; i <= num; ++i) {
            factorial *= i;
        }
        printf("Factorial of %d = %llu\n", num, factorial);
    }
    
    return 0;
}

***********
display sum of digits of a number 
#include <stdio.h>

int main() {
    int num, sum = 0, remainder;
    
    printf("Enter a number: ");
    scanf("%d", &num);
    
    while (num != 0) {
        remainder = num % 10;
        sum += remainder;
        num /= 10;
    }
    
    printf("Sum of digits: %d\n", sum);
    
    return 0;
}

******************
check if a number is Even or Odd 
#include <stdio.h>

int main() {
    int num;
    
    printf("Enter an integer: ");
    scanf("%d", &num);
    
    if (num % 2 == 0)
        printf("%d is an Even number.\n", num);
    else
        printf("%d is an Odd number.\n", num);
    
    return 0;
}

*************
Check if a Number is a Palindrome
#include <stdio.h>

int main() {
    int num, reversedNum = 0, remainder, originalNum;
    
    // Input the number from user
    printf("Enter an integer: ");
    scanf("%d", &num);
    
    // Store the original number to compare later
    originalNum = num;
    
    // Reverse the number
    while (num != 0) {
        remainder = num % 10;
        reversedNum = reversedNum * 10 + remainder;
        num /= 10;
    }
    
    // Check if the original number is equal to the reversed number
    if (originalNum == reversedNum)
        printf("%d is a Palindrome number.\n", originalNum);
    else
        printf("%d is not a Palindrome number.\n", originalNum);
    
    return 0;
}

**************
a program to find prime number
#include <stdio.h>

int main() {
    int num, i, isPrime = 1;
    
    // Input the number from user
    printf("Enter a positive integer: ");
    scanf("%d", &num);
    
    // Check if the number is less than 2
    if (num <= 1) {
        printf("%d is not a prime number.\n", num);
        return 0;
    }
    
    // Check for factors from 2 to sqrt(num)
    for (i = 2; i <= num / 2; i++) {
        if (num % i == 0) {
            isPrime = 0; // Set flag to false if divisible
            break;
        }
    }
    
    // Output result based on isPrime flag
    if (isPrime)
        printf("%d is a prime number.\n", num);
    else
        printf("%d is not a prime number.\n", num);
    
    return 0;
}


***********
find Fibonacci series
#include <stdio.h>

int main() {
    int n, t1 = 0, t2 = 1, nextTerm, i;
    
    // Input the number of terms from the user
    printf("Enter the number of terms: ");
    scanf("%d", &n);
    
    printf("Fibonacci Series: %d, %d", t1, t2);  // Print first two terms

    // Generate the rest of the Fibonacci sequence
    for (i = 3; i <= n; ++i) {
        nextTerm = t1 + t2;
        printf(", %d", nextTerm);
        t1 = t2;
        t2 = nextTerm;
    }
    
    printf("\n");
    return 0;
}


************

Write shell scrip for pattern matching.

Write a shell script to search pattern matching. 
